{"version":3,"sources":["Home.js","Navigation.js","SideNav.js","http-common.js","services/Reg_formService.js","components/Register.js","services/LoginService.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Grid","item","xs","sm","lg","Typography","variant","component","gutterBottom","useStyles","makeStyles","root","padding","button","borderRadius","links","float","color","paddingTop","fontWeight","textAlign","marginTop","ArchiveNav","classes","to","ListItemText","primary","styles","Button","type","id","placeholder","onKeyUp","searchInput","document","getElementById","value","toLowerCase","allTitle","getElementsByClassName","i","length","innerHTML","includes","parentElement","style","display","theme","width","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","Side","React","useState","selectedIndex","setSelectedIndex","handleListItemClick","event","index","open","setOpen","List","aria-label","ListItem","selected","onClick","ListItemIcon","fontSize","Divider","Collapse","in","timeout","unmountOnExit","disablePadding","axios","defaults","withCredentials","create","baseURL","headers","data","console","log","http","post","minWidth","table","warnings","success","Registration","initialReg_formState","first_name","last_name","email","gender","date_of_birth","state","country","phone","bio","password","confirmPassword","createdAt","reg_form","setReg_form","submitted","setSubmitted","hidden","setHidden","errors","setErrors","handleInputChange","target","name","validateForm","test","String","article-form","TableContainer","Table","TableHead","TableRow","TableCell","colSpan","align","TableBody","htmlFor","required","onChange","disabled","TextField","label","defaultValue","InputLabelProps","shrink","height","toLocaleString","Date","Object","keys","Reg_formDataService","then","response","window","alert","catch","e","active","Login","Cookies","remove","user_login","setUser_login","setLoggedin","history","useHistory","LoginDataService","set","expires","get","push","location","reload","App","container","Paper","path","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a5a0f693.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './Home.css'\r\nimport { Grid,Typography} from \"@material-ui/core\";\r\n\r\nconst Home = () =>{\r\n\r\n  \r\n  return (\r\n    <div className=\"\">\r\n        <Grid item xs={12} sm={8} lg={9} className=\"appContent\">\r\n          <Typography variant=\"h3\" component= \"h5\" gutterBottom>\r\n            Welcome to our website...\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3} lg={2} className=\"rightSide\">\r\n          <h4></h4>\r\n      </Grid>\r\n    </div>\r\n    )\r\n}\r\nexport default Home;","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./App.css\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n      borderRadius: 20,\r\n    },\r\n    links: {\r\n      float: \"left\",\r\n      color: \"rgb(36, 34, 34)\",\r\n      paddingTop: 0,\r\n      fontWeight: \"bolder\",\r\n      textAlign: \"center\",\r\n      marginTop: 0,\r\n    },\r\n  });\r\n\r\nconst ArchiveNav = () =>{\r\n  const category = \"life\";\r\n\r\n    //Search Catalog\r\n    const searchCatalog = () =>{ \r\n        let searchInput = document.getElementById('article-searcher').value \r\n        searchInput=searchInput.toLowerCase(); \r\n        let allTitle = document.getElementsByClassName('list-group-item'); \r\n        \r\n        for (let i = 0; i < allTitle.length; i++) { \r\n          if (!allTitle[i].innerHTML.toLowerCase().includes(searchInput)) { \r\n                  allTitle[i].parentElement.style.display=\"none\";\r\n          } \r\n          else {\r\n            allTitle[i].parentElement.style.display=\"block\";\t\t\t\t \r\n          } \r\n        } \r\n      }\r\n      const classes = useStyles();\r\n        return(\r\n            <div>\r\n            <div className=\"navbar\">\r\n              <Typography variant=\"h6\" component=\"h7\" >\r\n                    <Link to={\"/e-commerce\"} className={classes.links}>\r\n                      <ListItemText primary=\"HOME\" styles={{fontWeight:\"bold\"}}/>\r\n                    </Link>\r\n                          <div className=\"dropdown\">\r\n                            <button className=\"dropbtn\"><Link to={\"/category/\" + category} className={classes.links}>\r\n                              <ListItemText primary=\"CATEGORIES\" />\r\n                            </Link></button>\r\n                              <div className=\"dropdown-content\">\r\n                                <Link to={\"/category/\" + category} className={classes.links}>\r\n                                  <ListItemText primary=\"Life\" />\r\n                                </Link>\r\n                                <Link to={\"/category/\" + category}>\r\n                                  <ListItemText primary=\"Career & Business\" />\r\n                                </Link>\r\n                                <Link to={\"/category/\" + category}>\r\n                                  <ListItemText primary=\"Education\" />\r\n                                </Link>\r\n                                <Link to={\"/category/\" + category}>\r\n                                  <ListItemText primary=\"Health\" />\r\n                                </Link>\r\n                                <Link to={\"/category/\" + category}>\r\n                                  <ListItemText primary=\"Religion\" />\r\n                                </Link>\r\n                              </div>\r\n                          </div>\r\n                          <Link to={\"/about-us\"} className={classes.links}>\r\n                            <ListItemText primary=\"ABOUT US\" />\r\n                          </Link>\r\n                          <Link to={\"/contact-us\"} className={classes.links}>\r\n                            <ListItemText primary=\"CONTACT US\" />\r\n                          </Link>\r\n                          <div className=\"article-search\">\r\n                              <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                              >\r\n                                  <SearchOutlinedIcon />\r\n                                  Search\r\n                              </Button>\r\n                              <input\r\n                                  type=\"text\"\r\n                                  id=\"article-searcher\"\r\n                                  className=\"searchbox\"\r\n                                  placeholder=\"Search Products/Sellers\"\r\n                                  onKeyUp={searchCatalog}\r\n                              />\r\n                              {/**/}\r\n                          </div>          \r\n                  <div>\r\n                      <p></p>\r\n                  </div>\r\n                </Typography>\r\n                  </div>\r\n            </div>\r\n\r\n            \r\n\r\n        )\r\n}\r\n\r\nexport default ArchiveNav","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport { Collapse } from '@material-ui/core';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport RouterIcon from '@material-ui/icons/Router';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Side = () => {\r\n  const classes = useStyles();\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        <ListItem\r\n          button\r\n          selected={selectedIndex === 0}\r\n          onClick={(event) => handleListItemClick(event, 0)}\r\n          style={{padding:\"1px\" }}\r\n        >\r\n          <ListItemIcon>\r\n            <HomeIcon style={{fontSize:\"20px\", padding:\"1px\"}} />\r\n          </ListItemIcon>\r\n          <Link to={\"/e-commerce\"}>\r\n            <ListItemText primary= \"Home\" />\r\n          </Link>\r\n        </ListItem>\r\n\r\n        <ListItem\r\n          button\r\n          selected={selectedIndex === 1}\r\n          onClick={(event) => handleListItemClick(event, 1)}\r\n          style={{padding:\"1px\" }}\r\n        >\r\n          <ListItemIcon>\r\n            <AccessTimeIcon style={{fontSize:\"20px\", padding:\"1px\"}} />\r\n          </ListItemIcon>\r\n          <Link to={\"/registration\"}>\r\n            <ListItemText primary=\"Registration\"/>\r\n          </Link>\r\n        </ListItem>\r\n\r\n        <ListItem\r\n        button\r\n        selected={selectedIndex === 1}\r\n        onClick={(event) => handleListItemClick(event, 1)}\r\n        style={{padding:\"1px\" }}\r\n      >\r\n        <ListItemIcon>\r\n          <AccessTimeIcon style={{fontSize:\"20px\", padding:\"1px\"}} />\r\n        </ListItemIcon>\r\n        <Link to={\"/login\"}>\r\n          <ListItemText primary=\"Login\"/>\r\n        </Link>\r\n      </ListItem>\r\n      </List>\r\n\r\n      <Divider />\r\n\r\n      <List component=\"nav\" aria-label=\"secondary mailbox folder\">\r\n        <ListItem\r\n          button\r\n          selected={selectedIndex === 3}\r\n          onClick={(event) => handleListItemClick(event, 3)}\r\n          style={{padding:\"1px\" }}\r\n        >\r\n        <ListItemIcon>\r\n          <PeopleIcon style={{fontSize:\"20px\", padding:\"1px\"}} />\r\n        </ListItemIcon>\r\n          <ListItemText primary=\"Products\" />\r\n        </ListItem>\r\n\r\n       <ListItem button onClick={handleClick} style={{padding:\"1px\" }}>\r\n        <ListItemIcon>\r\n          <AccessTimeIcon style={{fontSize:\"20px\", padding:\"1px\"}} />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Archives\" />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem button className={classes.nested} >\r\n            <ListItemIcon>\r\n              <StarBorder style={{fontSize:\"20px\", padding:\"1px\"}} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"2019\" />\r\n          </ListItem>\r\n\r\n            <ListItem button className={classes.nested} >\r\n              <ListItemIcon>\r\n                <StarBorder style={{fontSize:\"20px\", padding:\"1px\"}} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"2020\" />\r\n            </ListItem>\r\n          </List>\r\n      </Collapse>\r\n    </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Side;\r\n","import axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3100\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  }\r\n});\r\n\r\n/*axios.defaults.withCredentials = true;\r\n axios.get('http://localhost:8080/getDetails',{\r\n           headers:{\r\n                    withCredentials:true,\r\n\r\n                   }\r\n  });*/","import http from \"../http-common\";\r\n\r\nconst create = data => {\r\n  console.log(data);\r\n  return http.post(\"/reg_form\", data);\r\n};\r\n\r\n\r\nexport default {\r\n  create,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport './Form.css'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Grid,Typography } from \"@material-ui/core\";\r\nimport Reg_formDataService from \"../services/Reg_formService\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport CheckCircleTwoToneIcon from '@material-ui/icons/CheckCircleTwoTone';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n      minWidth: 410,\r\n    },\r\n    table: {\r\n      minWidth: 360,\r\n    },\r\n    warnings: {\r\n      color: 'red',\r\n      padding: 0,\r\n    },\r\n    success: {\r\n      color: '#004d00',\r\n    },\r\n    \r\n  });\r\n\r\nconst Registration= () => {\r\n  const initialReg_formState = {\r\n    id: null,\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    gender: \"\",\r\n    date_of_birth: \"\",\r\n    state: \"\",\r\n    country: \"\",\r\n    phone: \"\",\r\n    bio: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    createdAt: \"\"\r\n  };\r\n  const [reg_form, setReg_form] = useState(initialReg_formState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [hidden, setHidden] = useState(true);\r\n  const [errors, setErrors] = useState({});\r\n  //const [submit_error, setSubmit_error] = useState(\"\");\r\n\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setReg_form({ ...reg_form, [name]: value });\r\n  };\r\n   const toggleShow = event => {\r\n       if (hidden){\r\n           setHidden(false);\r\n       }else{\r\n           setHidden(true)\r\n       };\r\n  };\r\n\r\n    const validateEmail = (email) => {\r\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const validateForm = (value) => {\r\n        const errors = {}\r\n        if (!value.first_name) errors.first_name = \"First name is required\";\r\n        if (!value.last_name) errors.last_name = \"Last name is required\";\r\n        if (!value.gender) errors.gender = \"Please select your gender\";\r\n        if (!value.date_of_birth) errors.date_of_birth = \"Please input your Date of Birth\";\r\n        if (!value.state) errors.state = \"State is required\";\r\n        if (!value.country) errors.country = \"Country is required\";\r\n        if (!value.bio) errors.bio = \"Bio is required\";\r\n        if (!value.phone) errors.phone = \"Phone number is required\";\r\n        if (!value.email) errors.email = \"Email address is required\";\r\n        else if (!validateEmail(value.email)) errors.email = \"Not a valid email address\";\r\n        if (!value.password) errors.password = \"Password is required\";\r\n        else if (value.password === value.state) errors.password = \"Please provide a password different from your state\";\r\n        else if (!value.confirmPassword) errors.confirmPassword = \"Please repeat the password\";\r\n        else if (value.password !== value.confirmPassword) errors.confirmPassword = \"Passwords don't match\";\r\n\r\n        return errors\r\n        }\r\n\r\n  const saveReg_form = () => {\r\n    var data = {\r\n      first_name: reg_form.first_name,\r\n      last_name: reg_form.last_name,\r\n      gender: reg_form.gender,\r\n      date_of_birth: reg_form.date_of_birth.toLocaleString(),\r\n      state: reg_form.state,\r\n      country: reg_form.country,\r\n      bio: reg_form.bio,\r\n      phone: reg_form.phone,\r\n      email: reg_form.email,\r\n      password: reg_form.password,\r\n      confirmPassword: reg_form.confirmPassword,\r\n      createdAt: new Date().toLocaleString(),\r\n    };\r\n    const errors = validateForm(data)\r\n    setErrors(errors)\r\n    if (!Object.keys(errors).length) {\r\n      Reg_formDataService.create(data)\r\n      .then(response => {\r\n        console.log(reg_form.state)\r\n        console.log(response.data)\r\n        if ((reg_form.state === response.data) && (typeof response.data === 'string')){\r\n            console.log(reg_form.state)\r\n            console.log(response.data)\r\n            window.alert(`Your state ${reg_form.state} exists already, please try another state`);\r\n            setReg_form(initialReg_formState);\r\n        }else if ((reg_form.email === response.data) && (typeof response.data === 'string')){\r\n            console.log(reg_form.email)\r\n            console.log(response.data)\r\n            window.alert(`Your email ${reg_form.email} exists already, please try another email`);\r\n            setReg_form(initialReg_formState);\r\n        }else{\r\n            setReg_form({\r\n              first_name: response.data.first_name,\r\n              last_name: response.data.last_name,\r\n              gender: response.data.gender,\r\n              date_of_birth: response.data.date_of_birth,\r\n              state: response.data.state,\r\n              phone: response.data.phone,\r\n              email: response.data.email,\r\n              password: response.data.password,\r\n              createdAt: response.data.createdAt\r\n            });\r\n            setSubmitted(true); // to be removed when backend is connected\r\n            //console.log(response.data);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n      setSubmitted(true);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"library-form\">\r\n      <div className=\"submit-form\">\r\n        {submitted ? (\r\n          <div>\r\n            <br />\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.success} gutterBottom>\r\n              <CheckCircleTwoToneIcon style={{fontSize:'26px', padding:'-2px'}}/>\r\n              Registration successful!\r\n              <br />\r\n              <Link to={\"/\"}><b>Continue</b></Link> to site or <Link to={\"/login\"}><b>login</b></Link> to site\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <div article-form=\"true\">\r\n            <TableContainer>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell colSpan={2} align=\"center\"><strong>Registration Form</strong>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"first_name\">First Name: </label></TableCell>\r\n                    <TableCell align=\"left\"><input\r\n                        type=\"text\"\r\n                        className=\"input-field\"\r\n                        id=\"first_name\"\r\n                        required\r\n                        placeholder=\"Type your first name here\"\r\n                        value={reg_form.first_name}\r\n                        onChange={handleInputChange}\r\n                        name=\"first_name\"\r\n                    />\r\n                        <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                          {errors.first_name && <p>{errors.first_name}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"last_name\">Last Name: </label></TableCell>\r\n                    <TableCell align=\"left\"><input\r\n                        type=\"text\"\r\n                        className=\"input-field\"\r\n                        id=\"last_name\"\r\n                        required\r\n                        placeholder=\"Type your last name here\"\r\n                        value={reg_form.last_name}\r\n                        onChange={handleInputChange}\r\n                        name=\"last_name\"\r\n                    />\r\n                      <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                        {errors.last_name && <p>{errors.last_name}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"email\">e-mail: </label></TableCell>\r\n                    <TableCell align=\"left\"><input\r\n                        type=\"text\"\r\n                        className=\"input-field\"\r\n                        id=\"email\"\r\n                        required\r\n                        placeholder=\"Input your email address\"\r\n                        value={reg_form.email|| \"\"}\r\n                        onChange={handleInputChange}\r\n                        name=\"email\"\r\n                    />\r\n                      <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                        {errors.email && <p>{errors.email}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"gender\">Gender: </label></TableCell>\r\n                    <TableCell align=\"left\"><select id=\"gender\" required value={reg_form.gender || \"\"}\r\n                        onChange={handleInputChange} name=\"gender\">\r\n                        <option value=\"\" disabled selected hidden>Please choose your gender...</option>\r\n                        <option value=\"Male\">Male</option>\r\n                        <option value=\"Female\">Female</option>\r\n                        <option value=\"Undisclosed\">Prefer not to Disclose</option>           \r\n                      </select>\r\n                      <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                        {errors.gender && <p>{errors.gender}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"date_of_birth\">Date of Birth: </label></TableCell>\r\n                    <TableCell align=\"left\"><TextField\r\n                        id=\"date_of_birth\"\r\n                        label=\"Birthday\"\r\n                        type=\"date\"\r\n                        defaultValue=\"2000-01-24\"\r\n                        value={reg_form.date_of_birth}\r\n                        onChange={handleInputChange}\r\n                        name=\"date_of_birth\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                    />\r\n                      <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                        {errors.date_of_birth && <p>{errors.date_of_birth}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"state\">State: </label></TableCell>\r\n                    <TableCell align=\"left\"><input\r\n                        type=\"text\"\r\n                        className=\"input-field\"\r\n                        id=\"state\"\r\n                        required\r\n                        placeholder=\"Provide your state\"\r\n                        value={reg_form.state|| \"\"}\r\n                        onChange={handleInputChange}\r\n                        name=\"state\"\r\n                    />\r\n                      <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                        {errors.state && <p>{errors.state}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"country\">Country: </label></TableCell>\r\n                    <TableCell align=\"left\"><input\r\n                        type=\"text\"\r\n                        className=\"input-field\"\r\n                        id=\"country\"\r\n                        required\r\n                        placeholder=\"Provide your country\"\r\n                        value={reg_form.country|| \"\"}\r\n                        onChange={handleInputChange}\r\n                        name=\"country\"\r\n                    />\r\n                      <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                        {errors.state && <p>{errors.state}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"bio\">Bio: </label></TableCell>\r\n                    <TableCell align=\"left\"><input\r\n                        type=\"text\"\r\n                        className=\"input-field\"\r\n                        id=\"bio\"\r\n                        required\r\n                        placeholder=\"Provide your bio\"\r\n                        value={reg_form.bio|| \"\"}\r\n                        onChange={handleInputChange}\r\n                        name=\"bio\"\r\n                    />\r\n                      <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                        {errors.bio && <p>{errors.bio}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n                    \r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"phone\">Phone: </label></TableCell>\r\n                    <TableCell align=\"left\"><input\r\n                        type=\"text\"\r\n                        className=\"input-field\"\r\n                        id=\"phone\"\r\n                        required\r\n                        placeholder=\"Input your business phone number\"\r\n                        value={reg_form.phone|| \"\"}\r\n                        onChange={handleInputChange}\r\n                        name=\"phone\"\r\n                    />\r\n                      <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                          {errors.phone && <p>{errors.phone}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"password\">Password: </label></TableCell>\r\n                    <TableCell align=\"left\"><input\r\n                        type={hidden ? \"password\" : \"text\"}\r\n                        className=\"input-field\"\r\n                        id=\"password\"\r\n                        required\r\n                        placeholder=\"Pick a password(min of 8 characters)\"\r\n                        value={reg_form.password|| \"\"}\r\n                        onChange={handleInputChange}\r\n                        name=\"password\"\r\n                    />\r\n                      <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                        {errors.password && <p>{errors.password}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"confirmPassword\">Confirm Password: </label></TableCell>\r\n                    <TableCell align=\"left\" ><input\r\n                        type={hidden ? \"password\" : \"text\"}\r\n                        className=\"input-field\"\r\n                        id=\"confirmPassword\"\r\n                        required\r\n                        placeholder=\"Retype your password here\"\r\n                        value={reg_form.confirmPassword|| \"\"}\r\n                        onChange={handleInputChange}\r\n                        name=\"confirmPassword\"\r\n                    />\r\n                      &ensp;<button onClick={toggleShow}>{hidden ? (<VisibilityOffIcon style={{fontSize:'20px', width: '11px', height: '11px', padding:'-2px'}}/>) : (<VisibilityIcon style={{fontSize:'20px', width: '11px', height: '11px', padding:'-2px'}} />)}\r\n                      </button>\r\n                    <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                          {errors.confirmPassword && <p>{errors.confirmPassword}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n                </Table>\r\n\r\n                <button onClick={saveReg_form} className=\"btn btn-success\">\r\n                Submit\r\n                </button>\r\n                <br/>\r\n            </TableContainer>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import http from \"../http-common\";\r\n\r\nconst create = data => {\r\n  console.log(data);\r\n  return http.post(\"/login\", data);\r\n};\r\nexport default {\r\n  create\r\n};\r\n","import React, { useState } from \"react\";\r\nimport './Form.css'\r\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory} from \"react-router-dom\";\r\nimport { Grid,Typography} from \"@material-ui/core\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginDataService from \"../services/LoginService\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport CheckCircleTwoToneIcon from '@material-ui/icons/CheckCircleTwoTone';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n      minWidth: 410,\r\n    },\r\n    table: {\r\n      minWidth: 360,\r\n    },\r\n    active: {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.12)',\r\n    },\r\n    warnings: {\r\n      color: 'red',\r\n      padding: 0,\r\n    },\r\n    success: {\r\n      color: '#004d00',\r\n    },\r\n    \r\n});\r\n\r\nconst Login= () => {\r\n  const initialUser_loginState = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  Cookies.remove();\r\n  const [user_login, setUser_login] = useState(initialUser_loginState);\r\n  const [loggedin, setLoggedin] = useState(false);\r\n  const [hidden, setHidden] = useState(true);\r\n  const [errors, setErrors] = useState({});\r\n\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setUser_login({ ...user_login, [name]: value });\r\n  };\r\n   const toggleShow = event => {\r\n       if (hidden){\r\n           setHidden(false);\r\n       }else{\r\n           setHidden(true)\r\n       };\r\n  };\r\n\r\n    const validateEmail = (email) => {\r\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const validateForm = (value) => {\r\n        const errors = {}\r\n        if (!value.email) errors.email = \"Email is required\";\r\n        else if (!validateEmail(value.email)) errors.email = \"Not a valid email address\";\r\n        if (!value.password) errors.password = \"Password is required\";\r\n        return errors\r\n        }\r\n\r\n    const history = useHistory();\r\n  const sendUser_login = () => {\r\n    var data = {\r\n        email: user_login.email,\r\n        password: user_login.password\r\n    };\r\n    const errors = validateForm(data)\r\n    setErrors(errors)\r\n    if (!Object.keys(errors).length) {\r\n        LoginDataService.create(data)\r\n        .then(response => {\r\n          setUser_login({\r\n            email: response.data.email,\r\n            password: response.data.id\r\n        });\r\n        Cookies.set('name', user_login.email, { expires: 7 });\r\n        setLoggedin(true);\r\n        console.log(Cookies.get('name'))\r\n        history.push(\"/\")\r\n        window.location.reload(false);\r\n    })\r\n      /*.catch(e => {\r\n        console.log(e);\r\n        window.alert(\"Invalid credentials, please enter your correct email and password\");\r\n        setUser_login(initialUser_loginState);\r\n      });*/\r\n\r\n      //Data post confirmation. to be removed later\r\n      setLoggedin(true);\r\n      history.push(\"/e-commerce\")\r\n      window.location.reload(false);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"library-form\">\r\n          <div article-form=\"true\">\r\n            <TableContainer>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell colSpan={2} align=\"center\"><strong>Login</strong>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"email\">Email: </label></TableCell>\r\n                    <TableCell align=\"left\"><input\r\n                        type=\"text\"\r\n                        className=\"input-field\"\r\n                        id=\"email\"\r\n                        required\r\n                        placeholder=\"Type your email here\"\r\n                        value={user_login.email|| \"\"}\r\n                        onChange={handleInputChange}\r\n                        name=\"email\"\r\n                    />\r\n                      <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                        {errors.email && <p>{errors.email}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n                    \r\n                    <TableRow>\r\n                    <TableCell align=\"left\"><label className=\"labelling\" htmlFor=\"password\">Password: </label></TableCell>\r\n                    <TableCell align=\"left\" ><input\r\n                        type={hidden ? \"password\" : \"text\"}\r\n                        className=\"input-field\"\r\n                        id=\"password\"\r\n                        required\r\n                        placeholder=\"Type your password here\"\r\n                        value={user_login.password|| \"\"}\r\n                        onChange={handleInputChange}\r\n                        name=\"password\"\r\n                    />\r\n                      &ensp;<button onClick={toggleShow}>{hidden ? (<VisibilityOffIcon style={{fontSize:'20px', width: '11px', height: '11px', padding:'-2px'}}/>) : (<VisibilityIcon style={{fontSize:'20px', width: '11px', height: '11px', padding:'-2px'}} />)}\r\n                      </button>\r\n                    <Typography variant=\"caption\" display=\"block\" className={classes.warnings} gutterBottom>\r\n                          {errors.password && <p>{errors.password}</p>}\r\n                          </Typography>\r\n                    </TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n                </Table>\r\n\r\n                <button onClick={sendUser_login} className=\"btn btn-success\">\r\n                 Login\r\n                </button>\r\n                <br/>\r\n            </TableContainer>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, {component, useState} from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Container, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Home from './Home.js';\r\nimport ArchiveNav from './Navigation';\r\nimport Side from './SideNav.js';\r\nimport \"./App.css\";\r\nimport Registration from \"./components/Register\";\r\nimport Login from \"./components/Login\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <div id=\"appContainer\" >\r\n      <Router>\r\n          <ArchiveNav />\r\n                <Grid container spacing={3} component={Paper} >\r\n                <Grid item xs={12} sm={3} lg={2}>\r\n                  <Side />\r\n                </Grid>\r\n                  <br/>\r\n                  <br/>\r\n                  <Grid item xs={9} sm={9} lg={10}>\r\n                  <div className=\"appContent\" style={{textAlign: \"center\"}}>\r\n                  <Switch>\r\n                      <Route path=\"/registration\" component={Registration} />\r\n                      <Route path=\"/login\" component={Login} />\r\n                      <Route path=\"/e-commerce\" component={Home} />\r\n                    </Switch>\r\n                </div>\r\n                </Grid>\r\n                </Grid>\r\n            <div>\r\n            </div>\r\n            </Router>\r\n          </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n/*\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'jquery/dist/jquery.min.js'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\n*/\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}